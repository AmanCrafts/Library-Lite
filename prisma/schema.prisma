// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          Int      @id @default(autoincrement())
  name        String
  email       String   @unique
  membership  String   @default("regular") 
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  borrowings  Borrow[]
}

model Author {
  id    Int    @id @default(autoincrement())
  name  String
  bio   String?
  books Book[]
}

model Book {
  id          Int          @id @default(autoincrement())
  title       String
  isbn        String       @unique
  publishedAt DateTime?
  available   Boolean      @default(true)
  authorId    Int
  author      Author       @relation(fields: [authorId], references: [id])
  borrowings  Borrow[]
  categories  Category[]   @relation("BookCategories")
}

model Category {
  id    Int    @id @default(autoincrement())
  name  String @unique
  books Book[] @relation("BookCategories")
}

model Borrow {
  id         Int      @id @default(autoincrement())
  userId     Int
  bookId     Int
  borrowDate DateTime @default(now())
  returnDate DateTime?
  returned   Boolean  @default(false)  
  status     String   @default("borrowed") 

  user User @relation(fields: [userId], references: [id])
  book Book @relation(fields: [bookId], references: [id])
}
